<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutomaticReviewRejection" xml:space="preserve">
    <value>自动审核驳回</value>
  </data>
  <data name="ContainsWrongPhoneNumber" xml:space="preserve">
    <value>包含错误的手机号码</value>
  </data>
  <data name="ContentNotInWhitelistTemplate" xml:space="preserve">
    <value>内容不在白名单模板中</value>
  </data>
  <data name="ExtnoFormatError" xml:space="preserve">
    <value>extno格式错（非数字或者长度不对）</value>
  </data>
  <data name="IPAddressAuthenticationError" xml:space="preserve">
    <value>IP地址认证错,请求调用的IP地址不是系统登记的IP地址</value>
  </data>
  <data name="NoSendingQuota" xml:space="preserve">
    <value>无发送额度（该用户可用短信数已使用完</value>
  </data>
  <data name="NoSuchProduct" xml:space="preserve">
    <value>无此产品，用户没有订购该产品</value>
  </data>
  <data name="NoSuchUser" xml:space="preserve">
    <value>无此用户</value>
  </data>
  <data name="NotWithinSendingTime" xml:space="preserve">
    <value>不在发送时间内</value>
  </data>
  <data name="OverAccountSendingLimitForTheMonth" xml:space="preserve">
    <value>超出该账户当月发送额度限制</value>
  </data>
  <data name="SensitiveSMS" xml:space="preserve">
    <value>敏感短信（短信内容包含敏感词）</value>
  </data>
  <data name="SignatureInvalid" xml:space="preserve">
    <value>签名不合法，未带签名（用户必须带签名的前提下）</value>
  </data>
  <data name="SubmittingTooFast" xml:space="preserve">
    <value>提交过快（提交速度超过流速限制）</value>
  </data>
  <data name="SystemBusy" xml:space="preserve">
    <value>系统忙（因平台侧原因，暂时无法处理提交的短信）</value>
  </data>
  <data name="TheNumberOfAvailableParameterGroupsIsWrong" xml:space="preserve">
    <value>可用参数组个数错误（小于最小设定值或者大于1000）</value>
  </data>
  <data name="TheNumberOfMobilePhoneNumbersWrong" xml:space="preserve">
    <value>手机号码个数错（群发&gt;50000或&lt;=0;单发&gt;200或&lt;=0）</value>
  </data>
  <data name="UserExpired" xml:space="preserve">
    <value>用户已过期</value>
  </data>
  <data name="UserHasNotPermissionToSend" xml:space="preserve">
    <value>用户没有相应的发送权限</value>
  </data>
  <data name="WrongMessageLength" xml:space="preserve">
    <value>消息长度错（&gt;700或&lt;=0）</value>
  </data>
  <data name="WrongPassword" xml:space="preserve">
    <value>密码错</value>
  </data>
</root>