var __extends=this&&this.__extends||function(){var n=function(t,i){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])},n(t,i)};return function(t,i){function r(){this.constructor=t}if(typeof i!="function"&&i!==null)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");n(t,i);t.prototype=i===null?Object.create(i):(r.prototype=i.prototype,new r)}}(),bwRoleEditPermissionService=function(n){function t(t){return n.call(this,t)||this}return __extends(t,n),t.prototype.serializeFormData=function(n){var u=document.querySelectorAll('input[type="checkbox"][authoritytype]'),i=[],t,r;return u.forEach(function(n){if(n.checked){var t=JSON.parse(n.value);i.push(t)}}),t=this.formUtilService.serializeObject(n),r={PermissionKeys:i,RoleID:t.RoleID,RoleName:t.RoleName},r},t.prototype.handleEditResponse=function(t,i){var r;if(t.dataModel&&t.dataModel.url){r=parent.bwRoleManagementService;r.search();var f=parent.layer,e=f.index,u=r.getUpdateViewArea(),o=$(window.parent).width()/2-u.width/2,s=$(window.parent).height()/2-u.height/2,h={left:o,top:s};f.style(e,$.extend(u,h));location.href=t.dataModel.url}else n.prototype.handleEditResponse.call(this,t,i)},t.prototype.initFirstOfRowCheckbox=function(){$("input[authoritytype=1]").click(function(){var n=$(this);n.closest("tr").find("input[type='checkbox']").prop("checked",n.prop("checked"))})},t.prototype.initSelectAllCheckbox=function(){$(".jqPermissionTypeCheckbox").each(function(){var n=this.dataset.menutype,t=$("#jqEditPermission").find("tr[menu=".concat(n,"] input[type=checkbox]")).filter(":not(:checked)").length==0;this.toggleAttribute("checked",t)});this.toggleAllPermissionStatusBySubCheckbox()},t.prototype.togglePermissionTypeCheckbox=function(n,t){var i=n.checked;$("#jqEditPermission").find("tr[menu=".concat(t,"] input[type=checkbox]")).prop("checked",i);this.toggleAllPermissionStatusBySubCheckbox()},t.prototype.toggleAllPermissionCheckbox=function(n){var t=n.checked;$("#jqEditPermission").find("tr input[type=checkbox]").prop("checked",t)},t.prototype.toggleCheckboxStatusBySubCheckbox=function(n,t){var i=n.checked,r=$("#jqEditPermission").find("tr[menu=".concat(t,"] input[type=checkbox]")).filter(":not(:checked)").length;if(i&&r!=0){this.toggleAllPermissionStatusBySubCheckbox();return}$(".jqPermissionTypeCheckbox[data-menutype=".concat(t,"]")).prop("checked",i);this.toggleAllPermissionStatusBySubCheckbox()},t.prototype.toggleAllPermissionStatusBySubCheckbox=function(){var n=$("tbody").find("input[type=checkbox]").filter(":not(:checked)").length==0;$("#jqAllPermission").prop("checked",n)},t}(editSingleRowService);